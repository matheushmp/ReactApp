[{"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\index.js":"1","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\reportWebVitals.js":"2","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\App.js":"3","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\main\\Calculadora.jsx":"4","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\components\\Button.jsx":"5","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\components\\Display.jsx":"6"},{"size":320,"mtime":1606921627570,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":528,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3477,"mtime":1607025623707,"results":"11","hashOfConfig":"8"},{"size":472,"mtime":1606938103153,"results":"12","hashOfConfig":"8"},{"size":155,"mtime":1606938104560,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12fe09u",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\index.js",[],["29","30"],"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\reportWebVitals.js",[],"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\App.js",[],"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\main\\Calculadora.jsx",["31"],"import React, { Component} from 'react'\r\nimport './Calculadora.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState= {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values:[0,0],\r\n    current: 0\r\n}\r\n\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state ={...initialState}\r\n    constructor(props){\r\n        super(props)\r\n        this.clearMemory=this.clearMemory.bind(this)\r\n        this.setOperation=this.setOperation.bind(this)\r\n        this.addDigit=this.addDigit.bind(this)\r\n    }\r\n    clearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation){\r\n        if(this.state.current===0){\r\n            this.setState({operation, current: 1, clearDisplay: true})\r\n        } else {\r\n            const equals = operation ==='='\r\n            const currentOperation = this.state.operation\r\n            const values = [...this.state.values]\r\n            try{\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n            } catch(e){\r\n                values[0] = this.state.values[0]\r\n            }\r\n            values[1] = 0\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals? 0 : 1, \r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n        console.log(operation)\r\n    }\r\n    addDigit(n){\r\n        if(n=== '.' && this.state.displayValue.includes('.')){return}\r\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        if(n=== '.' && currentValue===''){n='0.'}\r\n        const displayValue = currentValue + n\r\n        this.setState({displayValue, clearDisplay: false})\r\n\r\n        if(n!=='.'){\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values =[...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({values})\r\n            console.log(values)\r\n        }\r\n    }\r\n\r\n\r\n    render (){        \r\n        return (\r\n            <div className=\"calculadora\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click={this.clearMemory} triple/>\r\n                <Button label=\"/\" click={this.setOperation} operation/>\r\n                <Button label=\"7\" click={this.addDigit}/>\r\n                <Button label=\"8\" click={this.addDigit}/>\r\n                <Button label=\"9\" click={this.addDigit}/>\r\n                <Button label=\"*\" click={this.setOperation} operation/>\r\n                <Button label=\"4\" click={this.addDigit}/>\r\n                <Button label=\"5\" click={this.addDigit}/>\r\n                <Button label=\"6\" click={this.addDigit}/>\r\n                <Button label=\"-\" click={this.setOperation} operation/>\r\n                <Button label=\"1\" click={this.addDigit}/>\r\n                <Button label=\"2\" click={this.addDigit}/>\r\n                <Button label=\"3\" click={this.addDigit}/>\r\n                <Button label=\"+\" click={this.setOperation} operation/>\r\n                <Button label=\"0\" click={this.addDigit} double/>\r\n                <Button label=\".\" click={this.addDigit}/>\r\n                <Button label=\"=\" click={this.setOperation} operation/>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\components\\Button.jsx",[],"C:\\Users\\mathe\\js\\fundamentos\\node_modules\\unset-value\\node_modules\\exercicios-web\\react\\calculadora\\src\\components\\Display.jsx",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":37,"column":29,"nodeType":"40","messageId":"41","endLine":37,"endColumn":33},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-eval","eval can be harmful.","CallExpression","unexpected",["44"],["45"],"no-global-assign","no-unsafe-negation"]